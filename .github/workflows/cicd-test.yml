name: CICD Test
on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
jobs:
  test:
    runs-on: ubuntu-22.04
    env:
      CGO_ENABLED: 0
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      GO_PRIVATE: github.com/threatmate/*
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: |
          git fetch --tags --force  # Retrieve annotated tags.
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Setup Golang module caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-module-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-module-
      - name: Setup Golang install caches
        uses: actions/cache@v3
        with:
          path: |
            ~/go/bin
          key: ${{ runner.os }}-golang-install-${{ hashFiles('go.install') }}
          restore-keys: |
            ${{ runner.os }}-golang-install-
      - name: Setup access token
        run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
      - name: Build
        run: make clean
      - name: Go mod
        run: go mod tidy
      - name: Format
        run: ( make format || /bin/true ) && git diff ; count=$( git diff | wc -l ) && test "${count}" -eq 0
      - name: StaticCheck
        run: make staticcheck
      - name: Test
        run: make test
